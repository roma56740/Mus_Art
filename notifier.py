# notifier.py
import asyncio
import sqlite3
import os
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo  # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (Py 3.9+)

from aiogram import Bot
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv

load_dotenv()
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))

# –†–∞–∑ –≤ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –ë–î
CHECK_INTERVAL_SEC = 60

# –ñ—ë—Å—Ç–∫–æ —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ –ú–°–ö (UTC+3 –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞)
TZ = ZoneInfo("Europe/Moscow")


async def check_bookings_loop(bot: Bot):
    """
    –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª: –Ω–∞ –∫–∞–∂–¥–æ–º —Ç–∏–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º:
      - –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã (–∞–≤—Ç–æ–æ—Ç–º–µ–Ω–∞ –¥—É–±–ª–µ–π)
      - –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Ç–æ—á–µ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: -24 —á–∞—Å–∞, -1 —á–∞—Å
      - –∞–≤—Ç–æ–æ—Ç–º–µ–Ω—É –∑–∞ 10 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏
      - —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–ª—è –∞–¥–º–∏–Ω–∞
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ ‚Äî –ø–æ —Ñ–∞–∫—Ç—É ¬´–ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —Ç–æ—á–∫–∏¬ª –º–µ–∂–¥—É –ø—Ä–æ—à–ª—ã–º –∏ —Ç–µ–∫—É—â–∏–º —Ç–∏–∫–æ–º.
    """
    if not ADMIN_ID:
        print("[notifier] WARNING: ADMIN_ID –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")

    # –ü–æ–º–Ω–∏–º –≤—Ä–µ–º—è –ø—Ä–æ—à–ª–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å —Ç–æ—á–Ω–æ–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –º–æ–º–µ–Ω—Ç–æ–≤
    last_tick = datetime.now(tz=TZ) - timedelta(seconds=CHECK_INTERVAL_SEC + 5)

    while True:
        now = datetime.now(tz=TZ)

        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        # --- –ê–Ω—Ç–∏–∫–æ–Ω—Ñ–ª–∏–∫—Ç: –µ—Å–ª–∏ —Å–ª–æ—Ç—ã –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è –ø–æ —á–∞—Å–∞–º, –ª–∏—à–Ω–∏–π –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–º–µ–Ω—ë–Ω–Ω—ã–π ---
        cursor.execute("""
            SELECT id, telegram_id, date, time_from, time_to
            FROM bookings
            WHERE confirmed >= 0
            ORDER BY date, time_from
        """)
        bookings = cursor.fetchall()

        booked_map: dict[tuple[str, int], int] = {}  # (date_str, hour) -> booking_id

        for b_id, user_id, date_str, t_from, t_to in bookings:
            try:
                h_from = int(t_from)
                h_to = int(t_to)
            except Exception:
                # –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î ‚Äì –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å
                continue

            for h in range(h_from, h_to):
                key = (date_str, h)
                if key in booked_map:
                    # –ö–æ–Ω—Ñ–ª–∏–∫—Ç ‚Äì –æ—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â—É—é
                    cursor.execute("UPDATE bookings SET confirmed = -1 WHERE id = ?", (b_id,))
                    conn.commit()
                    try:
                        await bot.send_message(
                            user_id,
                            "‚ö†Ô∏è –í–∞—à–∞ –∑–∞–ø–∏—Å—å –±—ã–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞, —Ç.–∫. —ç—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ."
                        )
                    except Exception as e:
                        print(f"[notifier] conflict notify error: {e}")
                    break
                else:
                    booked_map[key] = b_id

        # --- –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ---
        cursor.execute("""
            SELECT id, telegram_id, date, time_from, time_to, confirmed, notified_24h, notified_1h
            FROM bookings
            WHERE confirmed >= 0
        """)
        rows = cursor.fetchall()

        for booking_id, user_id, date_str, time_from, time_to, confirmed, notified_24h, notified_1h in rows:
            # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ç—Ä–æ–∏–º –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞/–∫–æ–Ω—Ü–∞ —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—É—Ç–æ–∫ –ø—Ä–∏ time_from/to >= 24
            try:
                base_date = datetime.strptime(date_str, "%Y-%m-%d").replace(tzinfo=TZ)
                h_from = int(time_from)
                h_to = int(time_to)
            except Exception:
                # –ï—Å–ª–∏ –¥–∞—Ç–∞/—á–∞—Å—ã –±–∏—Ç—ã–µ ‚Äì –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                continue

            start_dt = base_date + timedelta(hours=h_from)
            end_dt = base_date + timedelta(hours=h_to)

            # –¶–µ–ª–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã
            t_24h = start_dt - timedelta(hours=24)
            t_1h = start_dt - timedelta(hours=1)
            t_autocancel = start_dt - timedelta(minutes=10)

            # –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ¬´—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã¬ª –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å—É—Ç–æ–∫
            tf_vis = h_from % 24
            tt_vis = h_to % 24
            date_vis = start_dt.date()  # —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Å —É—á—ë—Ç–æ–º –ø–µ—Ä–µ–Ω–æ—Å–∞

            # 1) –†–æ–≤–Ω–æ –∑–∞ 24 —á–∞—Å–∞ (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)
            if confirmed >= 0 and (not notified_24h) and (last_tick < t_24h <= now):
                try:
                    await bot.send_message(
                        user_id,
                        f"üìÖ –î–æ –≤–∞—à–µ–π –∑–∞–ø–∏—Å–∏ –æ—Å—Ç–∞–ª–æ—Å—å 24 —á–∞—Å–∞!\n"
                        f"–î–∞—Ç–∞: {date_vis}, –í—Ä–µ–º—è: {tf_vis:02d}:00‚Äì{tt_vis:02d}:00"
                    )
                    cursor.execute("UPDATE bookings SET notified_24h = 1 WHERE id = ?", (booking_id,))
                    conn.commit()
                except Exception as e:
                    print(f"[notifier] 24h notify error: {e}")

            # 2) –ó–∞ 1 —á–∞—Å (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ, –µ—Å–ª–∏ –µ—â—ë –∂–¥—ë–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
            elif confirmed == 0 and (not notified_1h) and (last_tick < t_1h <= now):
                kb = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="‚úÖ –Ø –ø—Ä–∏–¥—É", callback_data=f"confirm_booking|{booking_id}")]
                ])
                try:
                    await bot.send_message(
                        user_id,
                        "‚è∞ –í–∞—à–∞ —Å–µ—Å—Å–∏—è —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—ë—Ç—Å—è!\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –ø—Ä–∏–¥—ë—Ç–µ.",
                        reply_markup=kb
                    )
                    cursor.execute("UPDATE bookings SET notified_1h = 1 WHERE id = ?", (booking_id,))
                    conn.commit()
                except Exception as e:
                    print(f"[notifier] 1h notify error: {e}")

            # 3) –ê–≤—Ç–æ–æ—Ç–º–µ–Ω–∞ –∑–∞ 10 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–∞–∫ –∏ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª
            elif confirmed == 0 and (last_tick < t_autocancel <= now):
                cursor.execute("UPDATE bookings SET confirmed = -1 WHERE id = ?", (booking_id,))
                conn.commit()
                try:
                    await bot.send_message(
                        user_id,
                        "‚ùå –í–∞—à–∞ –∑–∞–ø–∏—Å—å –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –∑–∞ 10 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞."
                    )
                except Exception as e:
                    print(f"[notifier] autocancel notify error: {e}")

        # --- –ê–¥–º–∏–Ω—É: –æ—Ç–º–µ—á–∞–µ–º –ø—Ä–æ—à–µ–¥—à–∏–µ (confirmed=1 -> 3), –∫–æ–≥–¥–∞ —Å–ª–æ—Ç —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ø–æ –ú–°–ö ---
        cursor.execute("""
            SELECT id, telegram_id, date, time_from, time_to
            FROM bookings
            WHERE confirmed = 1
        """)
        passed = cursor.fetchall()

        for b_id, user_id, date_str, t_from, t_to in passed:
            try:
                base_date = datetime.strptime(date_str, "%Y-%m-%d").replace(tzinfo=TZ)
                h_to = int(t_to)
                dt_end = base_date + timedelta(hours=h_to)
            except Exception:
                continue

            if dt_end <= now:
                cursor.execute("UPDATE bookings SET confirmed = 3 WHERE id = ?", (b_id,))
                conn.commit()

                try:
                    user = await bot.get_chat(user_id)
                    username = f"@{user.username}" if getattr(user, "username", None) else f"id:{user.id}"
                except Exception:
                    username = f"id:{user_id}"

                tf_vis = int(t_from) % 24
                tt_vis = int(t_to) % 24
                kb = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="‚úÖ –ü—Ä–∏—à—ë–ª", callback_data=f"user_came|{b_id}")]
                ])
                try:
                    if ADMIN_ID:
                        await bot.send_message(
                            chat_id=ADMIN_ID,
                            text=(
                                f"üìå <b>–ü—Ä–æ—à–ª–∞ –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> {username}\n"
                                f"üìÖ {date_str} ‚è∞ {tf_vis:02d}:00‚Äì{tt_vis:02d}:00\n\n"
                                f"–ù–∞–∂–º–∏—Ç–µ, –µ—Å–ª–∏ –æ–Ω <b>–ø—Ä–∏—à—ë–ª</b> ‚¨áÔ∏è"
                            ),
                            reply_markup=kb,
                            parse_mode="HTML"
                        )
                except Exception as e:
                    print(f"[notifier] admin notify error: {e}")

        conn.close()

        # –§–∏–∫—Å–∏—Ä—É–µ–º –º–æ–º–µ–Ω—Ç —Ç–∏–∫–∞ –∏ —Å–ø–∏–º
        last_tick = now
        await asyncio.sleep(CHECK_INTERVAL_SEC)
